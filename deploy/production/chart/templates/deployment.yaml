apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-deployment
  labels:
    app: {{ .Values.service.name }}-selector
    chart: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: "{{ .Values.service.name }}-selector"
  template:
    metadata:
      labels:
        app: "{{ .Values.service.name }}-selector"
    spec:
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh"]
        args: 
          - "-c"
          - "(sleep 10 && medichaind tx medichain create-admin {{ .Values.services.adminPubKey }} --from {{ .Values.services.genesis.account }} --chain-id {{ .Values.services.node.chainID }} -y) | 
          medichaind start --rpc.laddr tcp://127.0.0.1:{{ .Values.services.rpcPort }} --rpc.pprof_laddr tcp://127.0.0.1:{{ .Values.services.pprofPort }} --grpc.address 0.0.0.0:{{ .Values.services.grpcPort }}"
        volumeMounts:
          - mountPath: "/home/tendermint/.medichain"
            name: config
        resources:
          requests:
            cpu: {{ .Values.image.resources.requests.cpu }}
            memory: {{ .Values.image.resources.requests.memory }}
          limits:
            cpu: {{ .Values.image.resources.limits.cpu }}
            memory: {{ .Values.image.resources.limits.memory }}
        ports:
          - containerPort: {{ .Values.services.grpcPort | default "9090" }}
            name: "{{ .Values.service.name | initials }}-grpc"
          - containerPort: {{ .Values.services.rpcPort | default "26657" }}
            name: "{{ .Values.service.name | initials }}-rpc"
          - containerPort: {{ .Values.services.httpPort | default "1317" }}
            name: "{{ .Values.service.name | initials }}-http"
          - containerPort: {{ .Values.services.pprofPort | default "8000" }}
            name: "{{ .Values.service.name | initials }}-pprof"
      initContainers:
      {{- if .Values.initBlockchain  }}
      - name: "delete-{{ .Values.service.name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - "sh"
          - "-c"
          - |
            /bin/sh << 'EOF'
            rm -Rf ~/.medichain
            EOF
        volumeMounts:
          - mountPath: "/home/tendermint/.medichain"
            name: config
      {{- end }}
      - name: "init-{{ .Values.service.name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - sh
          - "-c"
          - |
            /bin/sh << 'EOF'
            medichaind init {{ .Values.services.node.moniker | default "first-node" }} --chain-id {{ .Values.services.node.chainID | default "medichain" }} 
            echo '{{ .Values.services.genesis.mnemonic }}' | medichaind keys add {{ .Values.services.genesis.account }} --hd-path "m/44'/118'/0'/0" --recover --interactive=false
            medichaind add-genesis-account {{ .Values.services.genesis.account }} {{ .Values.services.genesis.amount }}
            medichaind keys list
            medichaind gentx {{ .Values.services.genesis.account }} 100000000stake --chain-id {{ .Values.services.node.chainID | default "medichain" }}
            medichaind collect-gentxs
            EOF
        volumeMounts:
          - mountPath: "/home/tendermint/.medichain"
            name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.service.name }}-pvc-1
