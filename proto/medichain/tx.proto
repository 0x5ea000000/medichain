syntax = "proto3";
package sota.medichain.medichain;

// this line is used by starport scaffolding # proto/tx/import
import "medichain/admin.proto";
import "medichain/sharing.proto";
import "medichain/service_user.proto";
import "medichain/service.proto";
import "medichain/user.proto";

option go_package = "github.com/sota/medichain/x/medichain/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateServiceUserBatch(MsgCreateServiceUserBatch) returns (MsgCreateServiceUserBatchResponse);
  rpc UnbanUser(MsgUnbanUser) returns (MsgUnbanUserResponse);
  rpc BanUser(MsgBanUser) returns (MsgBanUserResponse);
  rpc DeleteSharingBatch(MsgDeleteSharingBatch) returns (MsgDeleteSharingBatchResponse);
  rpc UpdateSharingStatusBatch(MsgUpdateSharingStatusBatch) returns (MsgUpdateSharingStatusBatchResponse);
  rpc CreateSharingBatch(MsgCreateSharingBatch) returns (MsgCreateSharingBatchResponse);
  rpc CreateAdmin(MsgCreateAdmin) returns (MsgCreateAdminResponse);
  rpc UpdateAdmin(MsgUpdateAdmin) returns (MsgUpdateAdminResponse);
  rpc DeleteAdmin(MsgDeleteAdmin) returns (MsgDeleteAdminResponse);
  rpc RejectSharing(MsgRejectSharing) returns (MsgRejectSharingResponse);
  rpc AcceptSharing(MsgAcceptSharing) returns (MsgAcceptSharingResponse);
  rpc CreateSharing(MsgCreateSharing) returns (MsgCreateSharingResponse);
  rpc UpdateSharing(MsgUpdateSharing) returns (MsgUpdateSharingResponse);
  rpc DeleteSharing(MsgDeleteSharing) returns (MsgDeleteSharingResponse);
  rpc CreateServiceUser(MsgCreateServiceUser) returns (MsgCreateServiceUserResponse);
  rpc UpdateServiceUser(MsgUpdateServiceUser) returns (MsgUpdateServiceUserResponse);
  rpc DeleteServiceUser(MsgDeleteServiceUser) returns (MsgDeleteServiceUserResponse);
  rpc CreateService(MsgCreateService) returns (MsgCreateServiceResponse);
  rpc UpdateService(MsgUpdateService) returns (MsgUpdateServiceResponse);
  rpc DeleteService(MsgDeleteService) returns (MsgDeleteServiceResponse);
  rpc CreateUser(MsgCreateUser) returns (MsgCreateUserResponse);
  rpc UpdateUser(MsgUpdateUser) returns (MsgUpdateUserResponse);
  rpc DeleteUser(MsgDeleteUser) returns (MsgDeleteUserResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateServiceUserBatch {
  string creator = 1;
  string userId = 2;
  repeated string serviceIds = 3;
}

message MsgCreateServiceUserBatchResponse {
}

message MsgUnbanUser {
  string creator = 1;
  string userId = 2;
}

message MsgUnbanUserResponse {
}

message MsgBanUser {
  string creator = 1;
  string userId = 2;
}

message MsgBanUserResponse {
}

message MsgDeleteSharingBatch {
  string creator = 1;
  repeated string indexs = 2;
}

message MsgDeleteSharingBatchResponse {
}

message MsgUpdateSharingStatusBatch {
  string creator = 1;
  repeated string indexs = 2;
  string status = 3;
}

message MsgUpdateSharingStatusBatchResponse {
}

message MsgCreateSharingBatch {
  string creator = 1;
  string viewerId = 2;
  string status = 3;
  repeated string ownerIds = 4;
}

message MsgCreateSharingBatchResponse {
}

message MsgCreateAdmin {
  string creator = 1;
  string pubKey = 2;
}

message MsgCreateAdminResponse {
  uint64 id = 1;
}

message MsgUpdateAdmin {
  string creator = 1;
  uint64 id = 2;
  string pubKey = 3;
}

message MsgUpdateAdminResponse { }

message MsgDeleteAdmin {
  string creator = 1;
  uint64 id = 2;
}

message MsgDeleteAdminResponse { }

message MsgRejectSharing {
  string creator = 1;
  string sharingId = 2;
}

message MsgRejectSharingResponse {
}

message MsgAcceptSharing {
  string creator = 1;
  string sharingId = 2;
}

message MsgAcceptSharingResponse {
}

message MsgCreateSharing {
  string creator = 1;
  string ownerId = 3;
  string viewerId = 4;
  string status = 5;
}
message MsgCreateSharingResponse {
  Sharing Sharing = 1;
}

message MsgUpdateSharing {
  string creator = 1;
  string index = 2;
  string ownerId = 3;
  string viewerId = 4;
  string status = 5;
}
message MsgUpdateSharingResponse {
  Sharing Sharing = 1;
}

message MsgDeleteSharing {
  string creator = 1;
  string index = 2;
}
message MsgDeleteSharingResponse {}

message MsgCreateServiceUser {
  string creator = 1;
  string serviceId = 3;
  string userId = 4;
  string serviceUserId = 5;
  bool isActive = 6;
}
message MsgCreateServiceUserResponse {
  ServiceUser ServiceUser = 1;
}

message MsgUpdateServiceUser {
  string creator = 1;
  string index = 2;
  string serviceId = 3;
  string userId = 4;
  string serviceUserId = 5;
  bool isActive = 6;
}
message MsgUpdateServiceUserResponse {
  ServiceUser ServiceUser = 1;
}

message MsgDeleteServiceUser {
  string creator = 1;
  string index = 2;
}
message MsgDeleteServiceUserResponse {}

message MsgCreateService {
  string creator = 1;
  string name = 3;
  string url = 4;
  string pubKey = 5;
  bool isActive = 6;
}
message MsgCreateServiceResponse {
  Service Service = 1;
}

message MsgUpdateService {
  string creator = 1;
  string index = 2;
  string name = 3;
  string url = 4;
  string pubKey = 5;
  bool isActive = 6;
}
message MsgUpdateServiceResponse {
  Service Service = 1;
}

message MsgDeleteService {
  string creator = 1;
  string index = 2;
}
message MsgDeleteServiceResponse {}

message MsgCreateUser {
  string creator = 1;
  string pubKey = 3;
  bool isActive = 4;
}
message MsgCreateUserResponse {
  User User = 1;
}

message MsgUpdateUser {
  string creator = 1;
  string index = 2;
  string pubKey = 3;
  bool isActive = 4;
}
message MsgUpdateUserResponse {
  User User = 1;
}

message MsgDeleteUser {
  string creator = 1;
  string index = 2;
}
message MsgDeleteUserResponse {}
